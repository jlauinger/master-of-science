
@inproceedings{almohri2018,
  title = {Fidelius {{Charm}}: {{Isolating Unsafe Rust Code}}},
  shorttitle = {Fidelius {{Charm}}},
  booktitle = {Proceedings of the {{Eighth ACM Conference}} on {{Data}} and {{Application Security}} and {{Privacy}}},
  author = {Almohri, Hussain M. J. and Evans, David},
  year = {2018},
  month = mar,
  pages = {248--255},
  publisher = {{Association for Computing Machinery}},
  address = {{New York, NY, USA}},
  doi = {10.1145/3176258.3176330},
  isbn = {978-1-4503-5632-9},
  keywords = {compartmentalization,isolation,rust,sandboxing},
  series = {{{CODASPY}} '18}
}

@inproceedings{alnaeli2017,
  title = {Source {{Code Vulnerabilities}} in {{IoT Software Systems}}},
  booktitle = {Advances in {{Science}}, {{Technology}} and {{Engineering Systems Journal}}},
  author = {Alnaeli, Saleh Mohamed and Sarnowski, Melissa and Aman, Md Sayedul and Yelamarthi, Ahmed Kumar},
  year = {2017},
  month = aug,
  volume = {2},
  pages = {1502--1507},
  series = {3}
}

@inproceedings{amann2016,
  title = {{{MUBench}}: A Benchmark for {{API}}-Misuse Detectors},
  shorttitle = {{{MUBench}}},
  booktitle = {Proceedings of the 13th {{International Conference}} on {{Mining Software Repositories}}},
  author = {Amann, Sven and Nadi, Sarah and Nguyen, Hoan A. and Nguyen, Tien N. and Mezini, Mira},
  year = {2016},
  month = may,
  pages = {464--467},
  publisher = {{Association for Computing Machinery}},
  address = {{New York, NY, USA}},
  doi = {10.1145/2901739.2903506},
  isbn = {978-1-4503-4186-8},
  keywords = {API-misuse detection,benchmark,bug detection},
  series = {{{MSR}} '16}
}

@inproceedings{bodden2016,
  title = {Information {{Flow Analysis}} for {{Go}}},
  booktitle = {Leveraging {{Applications}} of {{Formal Methods}}, {{Verification}} and {{Validation}}: {{Foundational Techniques}}},
  author = {Bodden, Eric and Pun, Ka I. and Steffen, Martin and Stolz, Volker and Wickert, Anna-Katharina},
  editor = {Margaria, Tiziana and Steffen, Bernhard},
  year = {2016},
  pages = {431--445},
  publisher = {{Springer International Publishing}},
  address = {{Cham}},
  doi = {10.1007/978-3-319-47166-2_30},
  isbn = {978-3-319-47166-2},
  keywords = {Function Call,Imperative Language,Malicious Application,Taint Analysis,Tainted Data},
  language = {en},
  series = {Lecture {{Notes}} in {{Computer Science}}}
}

@inproceedings{brimzhanova2019,
  title = {Cross-Platform Compilation of Programming Language {{Golang}} for Raspberry Pi},
  booktitle = {Proceedings of the 5th {{International Conference}} on {{Engineering}} and {{MIS}}},
  author = {Brimzhanova, S. S. and Atanov, S. K. and Khuralay, Moldamurat and Kobelekov, K. S. and Gagarina, L. G.},
  year = {2019},
  month = jun,
  pages = {1--5},
  publisher = {{Association for Computing Machinery}},
  address = {{New York, NY, USA}},
  doi = {10.1145/3330431.3330441},
  isbn = {978-1-4503-7212-1},
  keywords = {algorithms,Arduino,ARM processor,ARM processor version 6,bin,BogoMIPS,C ++,chrome browser,compilation,cross platform,distributive,DIY electronics,FreeBSD,full-featured computer,function,github,go 1.9.3,go language,golang,GOPATH,hardware platforms,HDMI,helloworld,language compilation,lightweight),low performance processors,mathematica,micro-USB,Mike Thomson,minecraft,model,model B,model B +,modified LXDE,modified medium,multi-core,multithreading,network machines,operating system,operating system of raspberry pi,Peter Green,PIXEL (pi improved xwindows environment,pkg,programming,programming paradigms,programs,project,raspberry pi,raspberry pi A,raspbian,raspbian jessie,raspbian stretch,RCA-RCA,single board computer,src,syntax,system programming,team,types},
  series = {{{ICEMIS}} '19}
}

@inproceedings{burow2018,
  title = {{{CUP}}: {{Comprehensive User}}-{{Space Protection}} for {{C}}/{{C}}++},
  shorttitle = {{{CUP}}},
  booktitle = {Proceedings of the 2018 on {{Asia Conference}} on {{Computer}} and {{Communications Security}}},
  author = {Burow, Nathan and McKee, Derrick and Carr, Scott A. and Payer, Mathias},
  year = {2018},
  month = may,
  pages = {381--392},
  publisher = {{Association for Computing Machinery}},
  address = {{New York, NY, USA}},
  doi = {10.1145/3196494.3196540},
  isbn = {978-1-4503-5576-6},
  keywords = {application security,memory safety,sanitizer,spatial memory safety,temporal memory safety},
  series = {{{ASIACCS}} '18}
}

@misc{cargogeiger,
  title = {Cargo {{Geiger Tool}}},
  author = {{Github User anderejd} and {Cargo Geiger Authors}},
  year = {2018}
}

@article{choi1999,
  title = {Escape Analysis for {{Java}}},
  author = {Choi, Jong-Deok and Gupta, Manish and Serrano, Mauricio and Sreedhar, Vugranam C. and Midkiff, Sam},
  year = {1999},
  month = oct,
  volume = {34},
  pages = {1--19},
  issn = {0362-1340},
  doi = {10.1145/320385.320386},
  journal = {ACM SIGPLAN Notices},
  number = {10}
}

@inproceedings{chou2001,
  title = {An {{Empirical Study}} of {{Operating Systems Errors}}},
  booktitle = {{{SOSP}} '01: {{Proceedings}} of the Eighteenth {{ACM}} Symposium on {{Operating}} Systems Principles},
  author = {Chou, Andy and Yang, Junfeng and Chelf, Benjamin and Hallem, Seth and Engler, Dawson},
  year = {2001},
  month = oct,
  pages = {73--88},
  publisher = {{ACM}},
  address = {{Benff, Canada}},
  doi = {10.1145/502034.502042}
}

@article{costa2020,
  title = {Breaking {{Type}}-{{Safety}} in {{Go}}: {{An Empirical Study}} on the {{Usage}} of the Unsafe {{Package}}},
  shorttitle = {Breaking {{Type}}-{{Safety}} in {{Go}}},
  author = {Costa, Diego Elias and Mujahid, Suhaib and Abdalkareem, Rabe and Shihab, Emad},
  year = {2020},
  month = jun,
  archivePrefix = {arXiv},
  eprint = {2006.09973},
  eprinttype = {arxiv},
  journal = {arXiv:2006.09973 [cs]},
  keywords = {Computer Science - Machine Learning,Computer Science - Programming Languages,Computer Science - Software Engineering},
  primaryClass = {cs}
}

@inproceedings{cui2018,
  title = {\{\vphantom\}{{REPT}}\vphantom\{\}: {{Reverse Debugging}} of {{Failures}} in {{Deployed Software}}},
  shorttitle = {\{\vphantom\}{{REPT}}\vphantom\{\}},
  booktitle = {13th \{\vphantom\}{{USENIX}}\vphantom\{\} {{Symposium}} on {{Operating Systems Design}} and {{Implementation}} (\{\vphantom\}{{OSDI}}\vphantom\{\} 18)},
  author = {Cui, Weidong and Ge, Xinyang and Kasikci, Baris and Niu, Ben and Sharma, Upamanyu and Wang, Ruoyu and Yun, Insu},
  year = {2018},
  pages = {17--32},
  isbn = {978-1-939133-08-3},
  language = {en}
}

@inproceedings{davi2011,
  title = {{{ROPdefender}}: A Detection Tool to Defend against Return-Oriented Programming Attacks},
  shorttitle = {{{ROPdefender}}},
  booktitle = {Proceedings of the 6th {{ACM Symposium}} on {{Information}}, {{Computer}} and {{Communications Security}}},
  author = {Davi, Lucas and Sadeghi, Ahmad-Reza and Winandy, Marcel},
  year = {2011},
  month = mar,
  pages = {40--51},
  publisher = {{Association for Computing Machinery}},
  address = {{New York, NY, USA}},
  doi = {10.1145/1966913.1966920},
  isbn = {978-1-4503-0564-8},
  keywords = {binary instrumentation,detection,return-oriented programming},
  series = {{{ASIACCS}} '11}
}

@inproceedings{difranco2017,
  title = {A Comprehensive Study of Real-World Numerical Bug Characteristics},
  booktitle = {2017 32nd {{IEEE}}/{{ACM International Conference}} on {{Automated Software Engineering}} ({{ASE}})},
  author = {Di Franco, Anthony and Guo, Hui and {Rubio-Gonz{\'a}lez}, Cindy},
  year = {2017},
  month = oct,
  pages = {509--519},
  doi = {10.1109/ASE.2017.8115662},
  keywords = {automated program repair,Computer bugs,Elemental,GNU Scientific Library,LAPACK,Libraries,Maintenance engineering,numerical bug characteristics,numerical software libraries,NumPy,program analysis,program debugging,program diagnostics,program testing,public domain software,Roundoff errors,safety-critical software,safety-critical systems,SciPy,Semantics,Software,software libraries,software maintenance,Tools}
}

@inproceedings{dilley2019,
  title = {An {{Empirical Study}} of {{Messaging Passing Concurrency}} in {{Go Projects}}},
  booktitle = {2019 {{IEEE}} 26th {{International Conference}} on {{Software Analysis}}, {{Evolution}} and {{Reengineering}} ({{SANER}})},
  author = {Dilley, Nicolas and Lange, Julien},
  year = {2019},
  month = feb,
  pages = {377--387},
  issn = {1534-5351},
  doi = {10.1109/SANER.2019.8668036},
  keywords = {Communication channels,Computer languages,concurrency control,Concurrent computing,Docker,empirical study,GitHub,Go project,Golang,Kubernetes,message passing,Message passing,message passing concurrency mechanism,Message systems,program verification,Programming,programming language,programming languages,Software,static analysis,static verification,system programming}
}

@inproceedings{egele2013,
  title = {An Empirical Study of Cryptographic Misuse in Android Applications},
  booktitle = {Proceedings of the 2013 {{ACM SIGSAC}} Conference on {{Computer}} \& Communications Security},
  author = {Egele, Manuel and Brumley, David and Fratantonio, Yanick and Kruegel, Christopher},
  year = {2013},
  month = nov,
  pages = {73--84},
  publisher = {{Association for Computing Machinery}},
  address = {{New York, NY, USA}},
  doi = {10.1145/2508859.2516693},
  isbn = {978-1-4503-2477-9},
  keywords = {program analysis,software security},
  series = {{{CCS}} '13}
}

@inproceedings{evans2020,
  title = {Is {{Rust Used Safely}} by {{Software Developers}}?},
  booktitle = {42nd {{International Conference}} on {{Software Engineering}} ({{ICSE}} '20)},
  author = {Evans, Ana Nora and Campbell, Bradford and Soffa, Mary Lou},
  year = {2020},
  month = may,
  publisher = {{ACM, New York, NY, USA}},
  address = {{Seoul, Republic of Korea}},
  doi = {10.1145/3377811.3380413}
}

@article{gabet2020,
  title = {Static {{Race Detection}} and {{Mutex Safety}} and {{Liveness}} for {{Go Programs}} (Extended Version)},
  author = {Gabet, Julia and Yoshida, Nobuko},
  year = {2020},
  month = apr,
  archivePrefix = {arXiv},
  eprint = {2004.12859},
  eprinttype = {arxiv},
  journal = {arXiv:2004.12859 [cs]},
  keywords = {Computer Science - Logic in Computer Science,Computer Science - Programming Languages},
  primaryClass = {cs}
}

@inproceedings{giunti2020,
  title = {{{GoPi}}: {{Compiling}} Linear and Static Channels in Go},
  booktitle = {Coordination Models and Languages},
  author = {Giunti, Marco},
  editor = {Bliudze, Simon and Bocchi, Laura},
  year = {2020},
  pages = {137--152},
  publisher = {{Springer International Publishing}},
  address = {{Cham}},
  isbn = {978-3-030-50029-0}
}

@misc{go-unsafe-pkg,
  title = {Unsafe {{Package}}},
  author = {{The Go Programming Language}},
  howpublished = {https://golang.org/pkg/unsafe/}
}

@misc{gocsv,
  title = {Gocarina/Gocsv {{Go Library}}},
  author = {{Github User gocarina} and {Gocsv Authors}},
  year = {2020},
  month = jun,
  copyright = {MIT License         ,                 MIT License},
  howpublished = {gocarina}
}

@misc{gogit,
  title = {Go-Git/Go-Git {{Go Library}}},
  author = {{Go-Git Authors}},
  year = {2020},
  month = jun,
  copyright = {Apache-2.0 License         ,                 Apache-2.0 License},
  howpublished = {go-git},
  keywords = {git,git-client,git-server,go-git,golang}
}

@misc{gogithub,
  title = {Google/Go-Github {{Go Library}}},
  author = {{Go-Github Authors}},
  year = {2020},
  month = jun,
  copyright = {BSD-3-Clause License         ,                 BSD-3-Clause License},
  howpublished = {Google},
  keywords = {github-api,go}
}

@inproceedings{gong2015,
  title = {{{DLint}}: Dynamically Checking Bad Coding Practices in {{JavaScript}}},
  shorttitle = {{{DLint}}},
  booktitle = {Proceedings of the 2015 {{International Symposium}} on {{Software Testing}} and {{Analysis}}},
  author = {Gong, Liang and Pradel, Michael and Sridharan, Manu and Sen, Koushik},
  year = {2015},
  month = jul,
  pages = {94--105},
  publisher = {{Association for Computing Machinery}},
  address = {{New York, NY, USA}},
  doi = {10.1145/2771783.2771809},
  isbn = {978-1-4503-3620-8},
  keywords = {Code practice,DLint,dynamic analysis,metric},
  series = {{{ISSTA}} 2015}
}

@misc{govet,
  title = {Go {{Vet Tool}}},
  author = {{Golang Developers}},
  year = {2009}
}

@inproceedings{gu2015,
  title = {What Change History Tells Us about Thread Synchronization},
  booktitle = {Proceedings of the 2015 10th {{Joint Meeting}} on {{Foundations}} of {{Software Engineering}}},
  author = {Gu, Rui and Jin, Guoliang and Song, Linhai and Zhu, Linjie and Lu, Shan},
  year = {2015},
  month = aug,
  pages = {426--438},
  publisher = {{Association for Computing Machinery}},
  address = {{Bergamo, Italy}},
  doi = {10.1145/2786805.2786815},
  isbn = {978-1-4503-3675-8},
  keywords = {Concurrency Bugs,Empirical Study,Locks,Multi-Threaded Software,Performance Bugs,Repository Mining},
  series = {{{ESEC}}/{{FSE}} 2015}
}

@inproceedings{gunawi2014,
  title = {What {{Bugs Live}} in the {{Cloud}}? {{A Study}} of 3000+ {{Issues}} in {{Cloud Systems}}},
  shorttitle = {What {{Bugs Live}} in the {{Cloud}}?},
  booktitle = {Proceedings of the {{ACM Symposium}} on {{Cloud Computing}}},
  author = {Gunawi, Haryadi S. and Hao, Mingzhe and Leesatapornwongsa, Tanakorn and {Patana-anake}, Tiratat and Do, Thanh and Adityatama, Jeffry and Eliazar, Kurnia J. and Laksono, Agung and Lukman, Jeffrey F. and Martin, Vincentius and Satria, Anang D.},
  year = {2014},
  month = nov,
  pages = {1--14},
  publisher = {{Association for Computing Machinery}},
  address = {{Seattle, WA, USA}},
  doi = {10.1145/2670979.2670986},
  isbn = {978-1-4503-3252-1},
  series = {{{SOCC}} '14}
}

@article{hannan1998,
  title = {A Type-Based Escape Analysis for Functional Languages},
  author = {Hannan, John},
  year = {1998},
  month = may,
  volume = {8},
  pages = {239--273},
  publisher = {{Cambridge University Press}},
  issn = {1469-7653, 0956-7968},
  doi = {10.1017/S0956796898003025},
  journal = {Journal of Functional Programming},
  language = {en},
  number = {3}
}

@inproceedings{heffley2004,
  title = {Can Source Code Auditing Software Identify Common Vulnerabilities and Be Used to Evaluate Software Security?},
  booktitle = {37th {{Annual Hawaii International Conference}} on {{System Sciences}}, 2004. {{Proceedings}} of The},
  author = {Heffley, J. and Meunier, P.},
  year = {2004},
  month = jan,
  pages = {10 pp.-},
  doi = {10.1109/HICSS.2004.1265654},
  keywords = {Buffer overflow,buffer overflows,Costing,Information security,Large-scale systems,memory leaks,Mission critical systems,NIST,Programming,Pscan,race conditions,Risk management,security of data,software engineering,software security evaluation,Software tools,software vulnerabilities,source code auditing software,source coding,string format vulnerabilities,symlink attacks,Testing}
}

@inproceedings{hill2002,
  title = {A {{Foundation}} of {{Escape Analysis}}},
  booktitle = {Algebraic {{Methodology}} and {{Software Technology}}},
  author = {Hill, Patricia M. and Spoto, Fausto},
  editor = {Kirchner, H{\'e}l{\`e}ne and Ringeissen, Christophe},
  year = {2002},
  pages = {380--395},
  publisher = {{Springer}},
  address = {{Berlin, Heidelberg}},
  doi = {10.1007/3-540-45719-4_26},
  isbn = {978-3-540-45719-0},
  keywords = {Abstract Domain,Abstract Interpretation,Abstract Operation,Concrete State,Type Environment},
  language = {en},
  series = {Lecture {{Notes}} in {{Computer Science}}}
}

@inproceedings{huang2019,
  title = {{{SafeCheck}}: {{Safety Enhancement}} of {{Java Unsafe API}}},
  shorttitle = {{{SafeCheck}}},
  booktitle = {2019 {{IEEE}}/{{ACM}} 41st {{International Conference}} on {{Software Engineering}} ({{ICSE}})},
  author = {Huang, Shiyou and Guo, Jianmei and Li, Sanhong and Li, Xiang and Qi, Yumin and Chow, Kingsum and Huang, Jeff},
  year = {2019},
  month = may,
  pages = {889--899},
  issn = {1558-1225},
  doi = {10.1109/ICSE.2019.00095},
  keywords = {application program interfaces,Bytecode,bytecode verification,Computer bugs,Dynamic Analysis,Java,Java core library,Java runtime,Java unsafe API,Java Unsafe API,JVM crash,Libraries,low- level system code,Memoey Safety,memory checker,memory protection,memory safety,openJDK bug system,program debugging,programming language,Runtime,Safety,safety enhancement,security of data,storage management,Tools,unsafe crash patterns}
}

@article{jin2012,
  title = {Understanding and Detecting Real-World Performance Bugs},
  author = {Jin, Guoliang and Song, Linhai and Shi, Xiaoming and Scherpelz, Joel and Lu, Shan},
  year = {2012},
  month = jun,
  volume = {47},
  pages = {77--88},
  issn = {0362-1340},
  doi = {10.1145/2345156.2254075},
  journal = {ACM SIGPLAN Notices},
  keywords = {characteristics study,performance bugs,rule-based bug detection},
  number = {6}
}

@article{jung2017,
  title = {{{RustBelt}}: Securing the Foundations of the Rust Programming Language},
  shorttitle = {{{RustBelt}}},
  author = {Jung, Ralf and Jourdan, Jacques-Henri and Krebbers, Robbert and Dreyer, Derek},
  year = {2017},
  month = dec,
  volume = {2},
  pages = {66:1--66:34},
  doi = {10.1145/3158154},
  journal = {Proceedings of the ACM on Programming Languages},
  keywords = {concurrency,logical relations,Rust,separation logic,type systems},
  number = {POPL}
}

@inproceedings{kruger2017,
  title = {{{CogniCrypt}}: {{Supporting}} Developers in Using Cryptography},
  shorttitle = {{{CogniCrypt}}},
  booktitle = {2017 32nd {{IEEE}}/{{ACM International Conference}} on {{Automated Software Engineering}} ({{ASE}})},
  author = {Kr{\"u}ger, Stefan and Nadi, Sarah and Reif, Michael and Ali, Karim and Mezini, Mira and Bodden, Eric and G{\"o}pfert, Florian and G{\"u}nther, Felix and Weinert, Christian and Demmler, Daniel and Kamath, Ram},
  year = {2017},
  month = oct,
  pages = {931--936},
  doi = {10.1109/ASE.2017.8115707},
  keywords = {application program interfaces,Ciphers,Code Analysis,Code Generation,CogniCrypt,cryptographic tasks,cryptography,Cryptography,data encryption,Encryption,Java,long-term archiving,low-level cryptographic API,static analysis,Tools,Variability Modeling}
}

@inproceedings{kruger2018,
  title = {{{CrySL}}: {{An Extensible Approach}} to {{Validating}} the {{Correct Usage}} of {{Cryptographic APIs}}},
  shorttitle = {{{CrySL}}},
  booktitle = {32nd {{European Conference}} on {{Object}}-{{Oriented Programming}} ({{ECOOP}} 2018)},
  author = {Kr{\"u}ger, Stefan and Sp{\"a}th, Johannes and Ali, Karim and Bodden, Eric and Mezini, Mira},
  editor = {Millstein, Todd},
  year = {2018},
  volume = {109},
  pages = {10:1--10:27},
  publisher = {{Schloss Dagstuhl\textendash Leibniz-Zentrum fuer Informatik}},
  address = {{Dagstuhl, Germany}},
  issn = {1868-8969},
  doi = {10.4230/LIPIcs.ECOOP.2018.10},
  isbn = {978-3-95977-079-8},
  keywords = {cryptography,domain-specific language,static analysis},
  series = {Leibniz {{International Proceedings}} in {{Informatics}} ({{LIPIcs}})}
}

@inproceedings{kula2017,
  title = {Do Developers Update Their Library Dependencies?},
  booktitle = {Empir {{Software Eng}} (2018) 23},
  author = {Kula, Raula Gaikovina and German, Daniel M. and Ouni, Ali and Ishio, Takashi and Inoue, Katsuro},
  year = {2017},
  month = may,
  pages = {384--417},
  publisher = {{Springer Science+Business Media}},
  address = {{New York}},
  doi = {10.1007/s10664-017-9521-5}
}

@article{lange2017,
  title = {Fencing off Go: Liveness and Safety for Channel-Based Programming},
  shorttitle = {Fencing off Go},
  author = {Lange, Julien and Ng, Nicholas and Toninho, Bernardo and Yoshida, Nobuko},
  year = {2017},
  month = jan,
  volume = {52},
  pages = {748--761},
  issn = {0362-1340},
  doi = {10.1145/3093333.3009847},
  journal = {ACM SIGPLAN Notices},
  keywords = {Channel-based programming,Compile-time (static) deadlock detection,Message-passing programming,Process calculus,Safety and Liveness,Types},
  number = {1}
}

@inproceedings{larochelle2001,
  title = {Statically {{Detecting Likely Buffer Overflow Vulnerabilities}}},
  booktitle = {10th {{USENIX Security Symposium}}},
  author = {Larochelle, David and Evans, David},
  year = {2001}
}

@article{lauinger2017,
  title = {Thou {{Shalt Not Depend}} on {{Me}}: {{Analysing}} the {{Use}} of {{Outdated JavaScript Libraries}} on the {{Web}}},
  shorttitle = {Thou {{Shalt Not Depend}} on {{Me}}},
  author = {Lauinger, Tobias and Chaabane, Abdelberi and Arshad, Sajjad and Robertson, William and Wilson, Christo and Kirda, Engin},
  year = {2017},
  doi = {10.14722/ndss.2017.23414},
  archivePrefix = {arXiv},
  eprint = {1811.00918},
  eprinttype = {arxiv},
  journal = {Proceedings 2017 Network and Distributed System Security Symposium},
  keywords = {Computer Science - Cryptography and Security}
}

@inproceedings{leesatapornwongsa2016,
  title = {{{TaxDC}}: {{A Taxonomy}} of {{Non}}-{{Deterministic Concurrency Bugs}} in {{Datacenter Distributed Systems}}},
  shorttitle = {{{TaxDC}}},
  booktitle = {Proceedings of the {{Twenty}}-{{First International Conference}} on {{Architectural Support}} for {{Programming Languages}} and {{Operating Systems}}},
  author = {Leesatapornwongsa, Tanakorn and Lukman, Jeffrey F. and Lu, Shan and Gunawi, Haryadi S.},
  year = {2016},
  month = mar,
  pages = {517--530},
  publisher = {{Association for Computing Machinery}},
  address = {{Atlanta, Georgia, USA}},
  doi = {10.1145/2872362.2872374},
  isbn = {978-1-4503-4091-5},
  keywords = {concurrency bugs,distributed systems,software testing},
  series = {{{ASPLOS}} '16}
}

@inproceedings{lehmann2020,
  title = {Everything {{Old}} Is {{New Again}}: {{Binary Security}} of {{WebAssembly}}},
  shorttitle = {Everything {{Old}} Is {{New Again}}},
  booktitle = {29th \{\vphantom\}{{USENIX}}\vphantom\{\} {{Security Symposium}} (\{\vphantom\}{{USENIX}}\vphantom\{\} {{Security}} 20)},
  author = {Lehmann, Daniel and Kinder, Johannes and Pradel, Michael},
  year = {2020},
  pages = {217--234},
  isbn = {978-1-939133-17-5},
  language = {en}
}

@inproceedings{lu2013,
  title = {A {{Study}} of {{Linux File System Evolution}}},
  booktitle = {11th \{\vphantom\}{{USENIX}}\vphantom\{\} {{Conference}} on {{File}} and {{Storage Technologies}} (\{\vphantom\}{{FAST}}\vphantom\{\} 13)},
  author = {Lu, Lanyue and {Arpaci-Dusseau}, Andrea C. and {Arpaci-Dusseau}, Remzi H. and Lu, Shan},
  year = {2013},
  pages = {31--44},
  isbn = {978-1-931971-99-7},
  language = {en}
}

@article{mastrangelo2015,
  title = {Use at Your Own Risk: The {{Java}} Unsafe {{API}} in the Wild},
  shorttitle = {Use at Your Own Risk},
  author = {Mastrangelo, Luis and Ponzanelli, Luca and Mocci, Andrea and Lanza, Michele and Hauswirth, Matthias and Nystrom, Nathaniel},
  year = {2015},
  month = oct,
  volume = {50},
  pages = {695--710},
  issn = {0362-1340},
  doi = {10.1145/2858965.2814313},
  journal = {ACM SIGPLAN Notices},
  keywords = {Java,Maven Central,mining,patterns,Stack Overflow,unsafe},
  number = {10}
}

@phdthesis{mastrangelo2019,
  title = {When and How Java Developers Give up Static Type Safety},
  author = {Mastrangelo, Luis},
  year = {2019},
  language = {en},
  school = {Universit\`a della Svizzera italiana}
}

@article{matsakis2014,
  title = {The Rust Language},
  author = {Matsakis, Nicholas D. and Klock, Felix S.},
  year = {2014},
  month = oct,
  volume = {34},
  pages = {103--104},
  issn = {1094-3641},
  doi = {10.1145/2692956.2663188},
  journal = {ACM SIGAda Ada Letters},
  keywords = {affine type systems,memory management,rust,systems programming},
  number = {3}
}

@inproceedings{mirhosseini2017,
  title = {Can Automated Pull Requests Encourage Software Developers to Upgrade Out-of-Date Dependencies?},
  booktitle = {2017 32nd {{IEEE}}/{{ACM International Conference}} on {{Automated Software Engineering}} ({{ASE}})},
  author = {Mirhosseini, Samim and Parnin, Chris},
  year = {2017},
  month = oct,
  pages = {84--94},
  publisher = {{IEEE}},
  address = {{Urbana, IL, USA}},
  doi = {10.1109/ASE.2017.8115621}
}

@inproceedings{nagarakatte2009,
  title = {{{SoftBound}}: Highly Compatible and Complete Spatial Memory Safety for c},
  shorttitle = {{{SoftBound}}},
  booktitle = {Proceedings of the 30th {{ACM SIGPLAN Conference}} on {{Programming Language Design}} and {{Implementation}}},
  author = {Nagarakatte, Santosh and Zhao, Jianzhou and Martin, Milo M.K. and Zdancewic, Steve},
  year = {2009},
  month = jun,
  pages = {245--258},
  publisher = {{Association for Computing Machinery}},
  address = {{New York, NY, USA}},
  doi = {10.1145/1542476.1542504},
  isbn = {978-1-60558-392-1},
  keywords = {buffer overflows,c,spatial memory safety},
  series = {{{PLDI}} '09}
}

@inproceedings{pashchenko2018,
  title = {Vulnerable {{Open Source Dependencies}}: {{Counting Those That Matter}}},
  booktitle = {{{ESEM}} '18: {{Proceedings}} of the 12th {{ACM}}/{{IEEE International Symposium}} on {{Empirical Software Engineering}} and {{Measurement}}},
  author = {Pashchenko, Ivan and Plate, Henrik and Ponta, Serena Elisa and Sabetta, Antonino and Massacci, Fabio},
  year = {2018},
  month = oct,
  pages = {1--10},
  publisher = {{ACM}},
  address = {{Oulu, Finland}},
  doi = {10.1145/3239235.3268920}
}

@inproceedings{qin2020,
  title = {Understanding {{Memory}} and {{Thread Safety Practices}} and {{Issues}} in {{Real}}-{{World Rust Programs}}},
  booktitle = {{{PLDI}} '20},
  author = {Qin, Boqin and Chen, Yilun and Yu, Zeming and Song, Linhai and Zhang, Yiying},
  year = {2020},
  month = jun,
  pages = {763--779},
  publisher = {{ACM}},
  address = {{London, UK}},
  doi = {10.1145/3385412.3386036}
}

@article{roemer2012,
  title = {Return-{{Oriented Programming}}: {{Systems}}, {{Languages}}, and {{Applications}}},
  shorttitle = {Return-{{Oriented Programming}}},
  author = {Roemer, Ryan and Buchanan, Erik and Shacham, Hovav and Savage, Stefan},
  year = {2012},
  month = mar,
  volume = {15},
  pages = {2:1--2:34},
  issn = {1094-9224},
  doi = {10.1145/2133375.2133377},
  journal = {ACM Transactions on Information and System Security},
  keywords = {attacks,control flow integrity,memory safety,NX,return-into-libc,Return-oriented programming,RISC,SPARC,W-xor-X,x86},
  number = {1}
}

@book{rourke2018,
  title = {Learn {{WebAssembly}}: {{Build}} Web Applications with Native Performance Using {{Wasm}} and {{C}}/{{C}}++},
  shorttitle = {Learn {{WebAssembly}}},
  author = {Rourke, Mike},
  year = {2018},
  month = sep,
  publisher = {{Packt Publishing Ltd}},
  googlebooks = {BGlwDwAAQBAJ},
  isbn = {978-1-78899-546-7},
  keywords = {Computers / Programming Languages / Assembly Language,Computers / Programming Languages / C,Computers / Programming Languages / General,Computers / Web / Web Programming},
  language = {en}
}

@inproceedings{sajnani2014,
  title = {Is {{Popularity}} a {{Measure}} of {{Quality}}? {{An Analysis}} of {{Maven Components}}},
  shorttitle = {Is {{Popularity}} a {{Measure}} of {{Quality}}?},
  booktitle = {2014 {{IEEE International Conference}} on {{Software Maintenance}} and {{Evolution}}},
  author = {Sajnani, Hitesh and Saini, Vaibhav and Ossher, Joel and Lopes, Cristina V.},
  year = {2014},
  month = sep,
  pages = {231--240},
  issn = {1063-6773},
  doi = {10.1109/ICSME.2014.45},
  keywords = {bug patterns,bugs,code quality,Complexity theory,Computer bugs,Correlation,Couplings,defect density,engineering quality,FindBugs,Java,Maven components analysis,Maven repository,Measurement,open source components,open source Java projects,open source software,program debugging,public domain software,software metrics,software quality,Software quality,software quality metrics,SQO-OSS quality model}
}

@inproceedings{sibiryov2017,
  title = {Golangs Garbage},
  author = {Sibiryov, Andrey},
  year = {2017},
  month = may,
  publisher = {{USENIX Association}}
}

@inproceedings{smith2020,
  title = {Why {{Can}}'t {{Johnny Fix Vulnerabilities}}: {{A Usability Evaluation}} of {{Static Analysis Tools}} for {{Security}}},
  booktitle = {{{USENIX Symposium}} on {{Usable Privacy}} and {{Security}} ({{SOUPS}}) 2020},
  author = {Smith, Justin and Do, Lisa Nguyen Quang and {Murphy-Hill}, Emerson},
  year = {2020},
  month = aug,
  pages = {169--184},
  address = {{Virtual}}
}

@inproceedings{song2019,
  title = {{{SoK}}: {{Sanitizing}} for {{Security}}},
  shorttitle = {{{SoK}}},
  booktitle = {2019 {{IEEE Symposium}} on {{Security}} and {{Privacy}} ({{SP}})},
  author = {Song, Dokyung and Lettner, Julian and Rajasekaran, Prabhu and Na, Yeoul and Volckaert, Stijn and Larsen, Per and Franz, Michael},
  year = {2019},
  month = may,
  pages = {1275--1295},
  issn = {2375-1207},
  doi = {10.1109/SP.2019.00010},
  keywords = {C programming languages,C++ languages,C++ programming languages,Casting,Computer bugs,Computer-Bugs,dynamic bug,dynamic program analysis,dynamic programming,Lenses,manual program analysis,program debugging,program diagnostics,Safety,Security,security of data,security vulnerabilities,Software-Safety,SoK,static program analysis,System-Software,Tools}
}

@inproceedings{szekeres2013,
  title = {{{SoK}}: {{Eternal War}} in {{Memory}}},
  shorttitle = {{{SoK}}},
  booktitle = {2013 {{IEEE Symposium}} on {{Security}} and {{Privacy}}},
  author = {Szekeres, L{\'a}szl{\'o} and Payer, Mathias and Wei, Tao and Song, Dawn},
  year = {2013},
  month = may,
  pages = {48--62},
  issn = {1081-6011},
  doi = {10.1109/SP.2013.13},
  keywords = {Aerospace electronics,Arrays,Computer bugs,computer security,memory corruption attacks,memory corruption bugs,Memory management,program debugging,Programming,protection mechanisms,protection techniques,Safety,Security,security of data,software reliability,SoK,storage management}
}

@inproceedings{tu2019,
  title = {Understanding {{Real}}-{{World Concurrency Bugs}} in {{Go}}},
  booktitle = {Proceedings of the {{Twenty}}-{{Fourth International Conference}} on {{Architectural Support}} for {{Programming Languages}} and {{Operating Systems}}},
  author = {Tu, Tengfei and Liu, Xiaoyu and Song, Linhai and Zhang, Yiying},
  year = {2019},
  month = apr,
  pages = {865--878},
  publisher = {{Association for Computing Machinery}},
  address = {{Providence, RI, USA}},
  doi = {10.1145/3297858.3304069},
  isbn = {978-1-4503-6240-5},
  keywords = {bug study,concurrency bug,go},
  series = {{{ASPLOS}} '19}
}

@inproceedings{wang2020,
  title = {Escape from {{Escape Analysis}} of {{Golang}}},
  booktitle = {{{ICSE}}},
  author = {Wang, Cong and Zhang, Mingrui and Jiang, Yu and Zhang, Huafeng and Xing, Zhenchang and Gu, Ming},
  year = {2020},
  month = may,
  publisher = {{ACM}},
  address = {{Seoul, Republic of Korea}},
  doi = {10.1145/3377813.3381368}
}

@inproceedings{watanabe2017,
  title = {Understanding the {{Origins}} of {{Mobile App Vulnerabilities}}: {{A Large}}-Scale {{Measurement Study}} of {{Free}} and {{Paid Apps}}},
  booktitle = {2017 {{IEEE}}/{{ACM}} 14th {{International Conference}} on {{Mining Software Repositories}} ({{MSR}})},
  author = {Watanabe, Takuya and Akiyama, Mitsuaki and Kanei, Fumihiro and Shioji, Eitaro and Takata, Yuta and Sun, Bo and Ishi, Yuta and Shibahara, Toshiki and Yagi, Takeshi and Mori, Tatsuya},
  year = {2017},
  month = may,
  pages = {14--24},
  publisher = {{IEEE}},
  address = {{Buenos Aires, Argentina}},
  doi = {10.1109/MSR.2017.23}
}

@book{watson1996,
  title = {Structured {{Testing}}: {{A Testing Methodology Using}} the {{Cyclomatic Complexity Metric}}},
  shorttitle = {Structured {{Testing}}},
  author = {Watson, Arthur Henry and Wallace, Dolores R. and McCabe, Thomas J.},
  year = {1996},
  publisher = {{U.S. Department of Commerce, Technology Administration, National Institute of Standards and Technology}},
  googlebooks = {lysRzUZhc2QC},
  isbn = {978-0-16-053381-5},
  language = {en}
}

@inproceedings{wickert2019,
  title = {A {{Dataset}} of {{Parametric Cryptographic Misuses}}},
  booktitle = {2019 {{IEEE}}/{{ACM}} 16th {{International}}  {{Conference}} on {{Mining Software Repositories}} ({{MSR}})},
  author = {Wickert, Anna-Katharina and Reif, Michael and Eichberg, Michael and Dodhy, Anam and Mezini, Mira},
  year = {2019},
  month = mar,
  publisher = {{IEEE}},
  language = {en}
}

@article{xia2014,
  title = {Studying {{Reuse}} of {{Out}}-Dated {{Third}}-Party {{Code}} in {{Open Source Projects}}},
  author = {Xia, Pei and Matsushita, Makoto and Yoshida, Norihiro and Inoue, Katsuro},
  year = {2014},
  volume = {9},
  pages = {155--161},
  doi = {10.11185/imt.9.155},
  journal = {Information and Media Technologies},
  number = {2}
}

@inproceedings{zhou2017,
  title = {Automated Identification of Security Issues from Commit Messages and Bug Reports},
  booktitle = {Proceedings of the 2017 11th {{Joint Meeting}} on {{Foundations}} of {{Software Engineering}}},
  author = {Zhou, Yaqin and Sharma, Asankhaya},
  year = {2017},
  month = aug,
  pages = {914--919},
  publisher = {{Association for Computing Machinery}},
  address = {{Paderborn, Germany}},
  doi = {10.1145/3106237.3117771},
  isbn = {978-1-4503-5105-8},
  keywords = {bug report,commit,machine learning,vulnerability identification},
  series = {{{ESEC}}/{{FSE}} 2017}
}


