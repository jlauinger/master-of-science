package main

import (
	"bufio"
	"fmt"
	"os"
	"reflect"
	"unsafe"
)

func win2() {
	fmt.Println("win")
	os.Exit(1)
}

func readData() bool {
	reader := bufio.NewReader(os.Stdin)
	inputBuffer := make([]byte, 1024)
	unsafeBuffer := make([]byte, 8)

	header := (*reflect.SliceHeader)(unsafe.Pointer(&inputBuffer))
	header.Data = uintptr(unsafe.Pointer(&unsafeBuffer[0]))

	n, err := reader.Read(inputBuffer)
	//reader.Read(inputBuffer)
	if err != nil {
		fmt.Printf("Read threw error: %v\n", err)
	}

	fmt.Printf("Read %v bytes\n", n)
	fmt.Printf("input buffer: %v\n", inputBuffer)
	fmt.Printf("unsafe buffer: %v\n", unsafeBuffer)

	return false
}

func main() {
	r := readData()

	// avoid optimization of win2
	if r {
		win2()
	}
}
