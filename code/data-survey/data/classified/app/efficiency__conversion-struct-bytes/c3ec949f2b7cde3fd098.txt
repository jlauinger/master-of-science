Module: k8s.io/client-go
Version: v0.17.2

Package: k8s.io/client-go/tools/clientcmd/api/v1
File: zz_generated.conversion.go
Line: 238

Imported (possibly among others) by: rook/rook

Label 1 (What is happening?): conversion-struct-bytes
Label 2 (For what purpose?): efficiency

--------------------------------------------------------------
Snippet line:

out.CertificateAuthorityData = *(*[]byte)(unsafe.Pointer(&in.CertificateAuthorityData))
--------------------------------------------------------------
+/- 5 lines context:


func autoConvert_v1_Cluster_To_api_Cluster(in *Cluster, out *api.Cluster, s conversion.Scope) error {
	out.Server = in.Server
	out.InsecureSkipTLSVerify = in.InsecureSkipTLSVerify
	out.CertificateAuthority = in.CertificateAuthority
	out.CertificateAuthorityData = *(*[]byte)(unsafe.Pointer(&in.CertificateAuthorityData))
	if err := Convert_Slice_v1_NamedExtension_To_Map_string_To_runtime_Object(&in.Extensions, &out.Extensions, s); err != nil {
		return err
	}
	return nil
}
--------------------------------------------------------------
+/- 100 lines context:

		return Convert_Slice_v1_NamedAuthInfo_To_Map_string_To_Pointer_api_AuthInfo(a.(*[]NamedAuthInfo), b.(*map[string]*api.AuthInfo), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*[]NamedCluster)(nil), (*map[string]*api.Cluster)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_Slice_v1_NamedCluster_To_Map_string_To_Pointer_api_Cluster(a.(*[]NamedCluster), b.(*map[string]*api.Cluster), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*[]NamedContext)(nil), (*map[string]*api.Context)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_Slice_v1_NamedContext_To_Map_string_To_Pointer_api_Context(a.(*[]NamedContext), b.(*map[string]*api.Context), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*[]NamedExtension)(nil), (*map[string]runtime.Object)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_Slice_v1_NamedExtension_To_Map_string_To_runtime_Object(a.(*[]NamedExtension), b.(*map[string]runtime.Object), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1_AuthInfo_To_api_AuthInfo(in *AuthInfo, out *api.AuthInfo, s conversion.Scope) error {
	out.ClientCertificate = in.ClientCertificate
	out.ClientCertificateData = *(*[]byte)(unsafe.Pointer(&in.ClientCertificateData))
	out.ClientKey = in.ClientKey
	out.ClientKeyData = *(*[]byte)(unsafe.Pointer(&in.ClientKeyData))
	out.Token = in.Token
	out.TokenFile = in.TokenFile
	out.Impersonate = in.Impersonate
	out.ImpersonateGroups = *(*[]string)(unsafe.Pointer(&in.ImpersonateGroups))
	out.ImpersonateUserExtra = *(*map[string][]string)(unsafe.Pointer(&in.ImpersonateUserExtra))
	out.Username = in.Username
	out.Password = in.Password
	out.AuthProvider = (*api.AuthProviderConfig)(unsafe.Pointer(in.AuthProvider))
	out.Exec = (*api.ExecConfig)(unsafe.Pointer(in.Exec))
	if err := Convert_Slice_v1_NamedExtension_To_Map_string_To_runtime_Object(&in.Extensions, &out.Extensions, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1_AuthInfo_To_api_AuthInfo is an autogenerated conversion function.
func Convert_v1_AuthInfo_To_api_AuthInfo(in *AuthInfo, out *api.AuthInfo, s conversion.Scope) error {
	return autoConvert_v1_AuthInfo_To_api_AuthInfo(in, out, s)
}

func autoConvert_api_AuthInfo_To_v1_AuthInfo(in *api.AuthInfo, out *AuthInfo, s conversion.Scope) error {
	// INFO: in.LocationOfOrigin opted out of conversion generation
	out.ClientCertificate = in.ClientCertificate
	out.ClientCertificateData = *(*[]byte)(unsafe.Pointer(&in.ClientCertificateData))
	out.ClientKey = in.ClientKey
	out.ClientKeyData = *(*[]byte)(unsafe.Pointer(&in.ClientKeyData))
	out.Token = in.Token
	out.TokenFile = in.TokenFile
	out.Impersonate = in.Impersonate
	out.ImpersonateGroups = *(*[]string)(unsafe.Pointer(&in.ImpersonateGroups))
	out.ImpersonateUserExtra = *(*map[string][]string)(unsafe.Pointer(&in.ImpersonateUserExtra))
	out.Username = in.Username
	out.Password = in.Password
	out.AuthProvider = (*AuthProviderConfig)(unsafe.Pointer(in.AuthProvider))
	out.Exec = (*ExecConfig)(unsafe.Pointer(in.Exec))
	if err := Convert_Map_string_To_runtime_Object_To_Slice_v1_NamedExtension(&in.Extensions, &out.Extensions, s); err != nil {
		return err
	}
	return nil
}

// Convert_api_AuthInfo_To_v1_AuthInfo is an autogenerated conversion function.
func Convert_api_AuthInfo_To_v1_AuthInfo(in *api.AuthInfo, out *AuthInfo, s conversion.Scope) error {
	return autoConvert_api_AuthInfo_To_v1_AuthInfo(in, out, s)
}

func autoConvert_v1_AuthProviderConfig_To_api_AuthProviderConfig(in *AuthProviderConfig, out *api.AuthProviderConfig, s conversion.Scope) error {
	out.Name = in.Name
	out.Config = *(*map[string]string)(unsafe.Pointer(&in.Config))
	return nil
}

// Convert_v1_AuthProviderConfig_To_api_AuthProviderConfig is an autogenerated conversion function.
func Convert_v1_AuthProviderConfig_To_api_AuthProviderConfig(in *AuthProviderConfig, out *api.AuthProviderConfig, s conversion.Scope) error {
	return autoConvert_v1_AuthProviderConfig_To_api_AuthProviderConfig(in, out, s)
}

func autoConvert_api_AuthProviderConfig_To_v1_AuthProviderConfig(in *api.AuthProviderConfig, out *AuthProviderConfig, s conversion.Scope) error {
	out.Name = in.Name
	out.Config = *(*map[string]string)(unsafe.Pointer(&in.Config))
	return nil
}

// Convert_api_AuthProviderConfig_To_v1_AuthProviderConfig is an autogenerated conversion function.
func Convert_api_AuthProviderConfig_To_v1_AuthProviderConfig(in *api.AuthProviderConfig, out *AuthProviderConfig, s conversion.Scope) error {
	return autoConvert_api_AuthProviderConfig_To_v1_AuthProviderConfig(in, out, s)
}

func autoConvert_v1_Cluster_To_api_Cluster(in *Cluster, out *api.Cluster, s conversion.Scope) error {
	out.Server = in.Server
	out.InsecureSkipTLSVerify = in.InsecureSkipTLSVerify
	out.CertificateAuthority = in.CertificateAuthority
	out.CertificateAuthorityData = *(*[]byte)(unsafe.Pointer(&in.CertificateAuthorityData))
	if err := Convert_Slice_v1_NamedExtension_To_Map_string_To_runtime_Object(&in.Extensions, &out.Extensions, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1_Cluster_To_api_Cluster is an autogenerated conversion function.
func Convert_v1_Cluster_To_api_Cluster(in *Cluster, out *api.Cluster, s conversion.Scope) error {
	return autoConvert_v1_Cluster_To_api_Cluster(in, out, s)
}

func autoConvert_api_Cluster_To_v1_Cluster(in *api.Cluster, out *Cluster, s conversion.Scope) error {
	// INFO: in.LocationOfOrigin opted out of conversion generation
	out.Server = in.Server
	out.InsecureSkipTLSVerify = in.InsecureSkipTLSVerify
	out.CertificateAuthority = in.CertificateAuthority
	out.CertificateAuthorityData = *(*[]byte)(unsafe.Pointer(&in.CertificateAuthorityData))
	if err := Convert_Map_string_To_runtime_Object_To_Slice_v1_NamedExtension(&in.Extensions, &out.Extensions, s); err != nil {
		return err
	}
	return nil
}

// Convert_api_Cluster_To_v1_Cluster is an autogenerated conversion function.
func Convert_api_Cluster_To_v1_Cluster(in *api.Cluster, out *Cluster, s conversion.Scope) error {
	return autoConvert_api_Cluster_To_v1_Cluster(in, out, s)
}

func autoConvert_v1_Config_To_api_Config(in *Config, out *api.Config, s conversion.Scope) error {
	// INFO: in.Kind opted out of conversion generation
	// INFO: in.APIVersion opted out of conversion generation
	if err := Convert_v1_Preferences_To_api_Preferences(&in.Preferences, &out.Preferences, s); err != nil {
		return err
	}
	if err := Convert_Slice_v1_NamedCluster_To_Map_string_To_Pointer_api_Cluster(&in.Clusters, &out.Clusters, s); err != nil {
		return err
	}
	if err := Convert_Slice_v1_NamedAuthInfo_To_Map_string_To_Pointer_api_AuthInfo(&in.AuthInfos, &out.AuthInfos, s); err != nil {
		return err
	}
	if err := Convert_Slice_v1_NamedContext_To_Map_string_To_Pointer_api_Context(&in.Contexts, &out.Contexts, s); err != nil {
		return err
	}
	out.CurrentContext = in.CurrentContext
	if err := Convert_Slice_v1_NamedExtension_To_Map_string_To_runtime_Object(&in.Extensions, &out.Extensions, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1_Config_To_api_Config is an autogenerated conversion function.
func Convert_v1_Config_To_api_Config(in *Config, out *api.Config, s conversion.Scope) error {
	return autoConvert_v1_Config_To_api_Config(in, out, s)
}

func autoConvert_api_Config_To_v1_Config(in *api.Config, out *Config, s conversion.Scope) error {
	// INFO: in.Kind opted out of conversion generation
	// INFO: in.APIVersion opted out of conversion generation
	if err := Convert_api_Preferences_To_v1_Preferences(&in.Preferences, &out.Preferences, s); err != nil {
		return err
	}
	if err := Convert_Map_string_To_Pointer_api_Cluster_To_Slice_v1_NamedCluster(&in.Clusters, &out.Clusters, s); err != nil {
		return err
	}
	if err := Convert_Map_string_To_Pointer_api_AuthInfo_To_Slice_v1_NamedAuthInfo(&in.AuthInfos, &out.AuthInfos, s); err != nil {
		return err
	}
	if err := Convert_Map_string_To_Pointer_api_Context_To_Slice_v1_NamedContext(&in.Contexts, &out.Contexts, s); err != nil {
		return err
	}
	out.CurrentContext = in.CurrentContext
	if err := Convert_Map_string_To_runtime_Object_To_Slice_v1_NamedExtension(&in.Extensions, &out.Extensions, s); err != nil {
		return err
	}
	return nil
}

// Convert_api_Config_To_v1_Config is an autogenerated conversion function.
func Convert_api_Config_To_v1_Config(in *api.Config, out *Config, s conversion.Scope) error {
	return autoConvert_api_Config_To_v1_Config(in, out, s)
}

func autoConvert_v1_Context_To_api_Context(in *Context, out *api.Context, s conversion.Scope) error {
	out.Cluster = in.Cluster
	out.AuthInfo = in.AuthInfo
	out.Namespace = in.Namespace
	if err := Convert_Slice_v1_NamedExtension_To_Map_string_To_runtime_Object(&in.Extensions, &out.Extensions, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1_Context_To_api_Context is an autogenerated conversion function.
func Convert_v1_Context_To_api_Context(in *Context, out *api.Context, s conversion.Scope) error {
	return autoConvert_v1_Context_To_api_Context(in, out, s)
}

func autoConvert_api_Context_To_v1_Context(in *api.Context, out *Context, s conversion.Scope) error {
	// INFO: in.LocationOfOrigin opted out of conversion generation
	out.Cluster = in.Cluster

