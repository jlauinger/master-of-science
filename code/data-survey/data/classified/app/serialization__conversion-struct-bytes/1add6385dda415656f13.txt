Module: github.com/vishvananda/netlink
Version: v1.0.1-0.20190913165827-36d367fd76f9

Package: github.com/vishvananda/netlink/nl
File: xfrm_monitor_linux.go
Line: 27

Imported (possibly among others) by: weaveworks/scope

Label 1 (What is happening?): conversion-struct-bytes
Label 2 (For what purpose?): serialization

--------------------------------------------------------------
Snippet line:

return (*XfrmUserExpire)(unsafe.Pointer(&b[0:SizeofXfrmUserExpire][0]))
--------------------------------------------------------------
+/- 5 lines context:

func (msg *XfrmUserExpire) Len() int {
	return SizeofXfrmUserExpire
}

func DeserializeXfrmUserExpire(b []byte) *XfrmUserExpire {
	return (*XfrmUserExpire)(unsafe.Pointer(&b[0:SizeofXfrmUserExpire][0]))
}

func (msg *XfrmUserExpire) Serialize() []byte {
	return (*(*[SizeofXfrmUserExpire]byte)(unsafe.Pointer(msg)))[:]
}
--------------------------------------------------------------
+/- 100 lines context:

package nl

import (
	"unsafe"
)

const (
	SizeofXfrmUserExpire = 0xe8
)

// struct xfrm_user_expire {
// 	struct xfrm_usersa_info		state;
// 	__u8				hard;
// };

type XfrmUserExpire struct {
	XfrmUsersaInfo XfrmUsersaInfo
	Hard           uint8
	Pad            [7]byte
}

func (msg *XfrmUserExpire) Len() int {
	return SizeofXfrmUserExpire
}

func DeserializeXfrmUserExpire(b []byte) *XfrmUserExpire {
	return (*XfrmUserExpire)(unsafe.Pointer(&b[0:SizeofXfrmUserExpire][0]))
}

func (msg *XfrmUserExpire) Serialize() []byte {
	return (*(*[SizeofXfrmUserExpire]byte)(unsafe.Pointer(msg)))[:]
}

