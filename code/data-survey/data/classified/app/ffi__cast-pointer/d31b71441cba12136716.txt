Module: github.com/godror/godror
Version: v0.16.0

Package: github.com/godror/godror
File: /root/.cache/go-build/3e/3eb68e40305fe81ca0dee558f59e189adc9285fbb731aaeb65e84ab9c38efddf-d
Line: 3945

Imported (possibly among others) by: xo/usql

Label 1 (What is happening?): cast-pointer
Label 2 (For what purpose?): ffi

--------------------------------------------------------------
Snippet line:

var _cgo_6cd21b101e7b_Cfunc_dpiPool_getBusyCount = unsafe.Pointer(&__cgofn__cgo_6cd21b101e7b_Cfunc_dpiPool_getBusyCount)
--------------------------------------------------------------
+/- 5 lines context:

	return
}
//go:cgo_import_static _cgo_6cd21b101e7b_Cfunc_dpiPool_getBusyCount
//go:linkname __cgofn__cgo_6cd21b101e7b_Cfunc_dpiPool_getBusyCount _cgo_6cd21b101e7b_Cfunc_dpiPool_getBusyCount
var __cgofn__cgo_6cd21b101e7b_Cfunc_dpiPool_getBusyCount byte
var _cgo_6cd21b101e7b_Cfunc_dpiPool_getBusyCount = unsafe.Pointer(&__cgofn__cgo_6cd21b101e7b_Cfunc_dpiPool_getBusyCount)

//go:cgo_unsafe_args
func _Cfunc_dpiPool_getBusyCount(p0 *_Ctype_struct_dpiPool, p1 *_Ctype_uint32_t) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_6cd21b101e7b_Cfunc_dpiPool_getBusyCount, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
--------------------------------------------------------------
+/- 100 lines context:

n/a
