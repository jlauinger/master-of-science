Module: golang.org/x/crypto
Version: v0.0.0-20200510223506-06a226fb4e37

Package: golang.org/x/crypto/internal/subtle
File: aliasing.go
Line: 18

Imported (possibly among others) by: hashicorp/terraform

Label 1 (What is happening?): pointer-arithmetic-memory-layout
Label 2 (For what purpose?): cleaner-code

--------------------------------------------------------------
Snippet line:

		uintptr(unsafe.Pointer(&y[0])) <= uintptr(unsafe.Pointer(&x[len(x)-1]))

--------------------------------------------------------------
+/- 5 lines context:

// corresponding) index. The memory beyond the slice length is ignored.
func AnyOverlap(x, y []byte) bool {
	return len(x) > 0 && len(y) > 0 &&
		uintptr(unsafe.Pointer(&x[0])) <= uintptr(unsafe.Pointer(&y[len(y)-1])) &&
		uintptr(unsafe.Pointer(&y[0])) <= uintptr(unsafe.Pointer(&x[len(x)-1]))
}

// InexactOverlap reports whether x and y share memory at any non-corresponding
// index. The memory beyond the slice length is ignored. Note that x and y can
// have different lengths and still not have any inexact overlap.

--------------------------------------------------------------
+/- 100 lines context:

error getting full file: /home/johannes/.go/pkg/mod/golang.org/x/crypto@v0.0.0-20200510223506-06a226fb4e37/internal/subtle/aliasing.go
